services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend:latest
    volumes:
      - ./backend:/code
    env_file: .env
    ports:
      - "8000:8000"
      - "5678:5678"
    depends_on:
      - redis
      - db
    deploy:
      resources:
        limits:
          memory: 2G

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend:latest
    command: ["celery", "-A", "app.workers", "worker", "--loglevel=info"]
    volumes:
      - ./backend:/code
    env_file: .env
    depends_on:
      - backend
      - redis

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      - backend

  redis:
    image: redis:7-alpine
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: caseforge
      POSTGRES_PASSWORD: caseforge
      POSTGRES_DB: caseforge
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pg_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "shared_buffers=256MB", "-c", "work_mem=8MB"]

volumes:
  pg_data:
