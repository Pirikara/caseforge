openapi: 3.1.0
info:
  title: Sample API
  version: 1.0.0

paths:
  /users:
    get:
      summary: Get list of users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'

    post:
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParam'
    get:
      summary: Get a user
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user
      responses:
        '204':
          description: User deleted

  /articles:
    get:
      summary: Get list of articles
      responses:
        '200':
          description: A list of articles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleListResponse'
    post:
      summary: Create an article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleInput'
      responses:
        '201':
          description: Created article
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'

  /articles/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParam'
    get:
      summary: Get an article
      responses:
        '200':
          description: A single article
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
    put:
      summary: Update an article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleInput'
      responses:
        '200':
          description: Updated article
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
    delete:
      summary: Delete an article
      responses:
        '204':
          description: Article deleted

components:
  parameters:
    IdParam:
      name: id
      in: path
      required: true
      schema:
        type: string

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
      required: [id, name, email]

    UserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      required: [name, email]

    UserListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        pagination:
          $ref: '#/components/schemas/Pagination'

    Article:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        author:
          $ref: '#/components/schemas/User'
      required: [id, title, content, author]

    ArticleInput:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        authorId:
          type: string
      required: [title, content, authorId]

    ArticleListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Article'
        pagination:
          $ref: '#/components/schemas/Pagination'

    Pagination:
      type: object
      properties:
        page:
          type: integer
        perPage:
          type: integer
        total:
          type: integer
